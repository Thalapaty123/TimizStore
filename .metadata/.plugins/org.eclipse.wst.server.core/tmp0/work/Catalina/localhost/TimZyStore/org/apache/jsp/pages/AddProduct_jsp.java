/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.99
 * Generated at: 2024-05-05 02:23:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class AddProduct_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Add New Product</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	 ");
      out.write("\r\n");
      out.write("    ");
 if (request.getAttribute("message") != null) { 
      out.write("\r\n");
      out.write("        <p>");
      out.print( request.getAttribute("message") );
      out.write("</p>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("    <h2>Add New Product</h2>\r\n");
      out.write("    <form action=\"/AddProductServlet\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("        <label for=\"product_name\">Product Name:</label><br>\r\n");
      out.write("        <input type=\"text\" id=\"product_name\" name=\"product_name\" required><br><br>\r\n");
      out.write("        \r\n");
      out.write("        <label for=\"product_description\">Product Description:</label><br>\r\n");
      out.write("        <textarea id=\"product_description\" name=\"product_description\"></textarea><br><br>\r\n");
      out.write("        \r\n");
      out.write("        <label for=\"price\">Price:</label><br>\r\n");
      out.write("        <input type=\"number\" id=\"price\" name=\"price\" step=\"0.01\" min=\"0\" required><br><br>\r\n");
      out.write("        \r\n");
      out.write("        <label for=\"quantity\">Quantity:</label><br>\r\n");
      out.write("        <input type=\"number\" id=\"quantity\" name=\"quantity\" min=\"0\" required><br><br>\r\n");
      out.write("        \r\n");
      out.write("        <label for=\"brand_id\">Brand ID:</label><br>\r\n");
      out.write("        <input type=\"number\" id=\"brand_id\" name=\"brand_id\" min=\"1\"><br><br>\r\n");
      out.write("        \r\n");
      out.write("        <label for=\"product_image\">Product Image:</label><br>\r\n");
      out.write("        <input type=\"file\" id=\"product_image\" name=\"product_image\"><br><br>\r\n");
      out.write("        \r\n");
      out.write("        <label for=\"screen_size\">Screen Size:</label><br>\r\n");
      out.write("        <input type=\"number\" id=\"screen_size\" name=\"screen_size\" step=\"0.01\" min=\"0\"><br><br>\r\n");
      out.write("        \r\n");
      out.write("        <label for=\"connectivity\">Connectivity:</label><br>\r\n");
      out.write("        <input type=\"text\" id=\"connectivity\" name=\"connectivity\"><br><br>\r\n");
      out.write("        \r\n");
      out.write("        <label for=\"os\">Operating System:</label><br>\r\n");
      out.write("        <input type=\"text\" id=\"os\" name=\"os\"><br><br>\r\n");
      out.write("        \r\n");
      out.write("        <label for=\"features\">Features:</label><br>\r\n");
      out.write("        <textarea id=\"features\" name=\"features\"></textarea><br><br>\r\n");
      out.write("        \r\n");
      out.write("        <input type=\"submit\" value=\"Submit\">\r\n");
      out.write("    </form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
