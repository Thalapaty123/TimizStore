/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.99
 * Generated at: 2024-05-09 10:19:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import models.ProductModel;

public final class Product_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("models.ProductModel");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\" crossorigin=\"anonymous\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/css/product.css\">\n");
      out.write("    <title>Products</title>\n");
      out.write("    <!-- Your CSS styles -->\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<!-- Navbar -->\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n");
      out.write("    <div class=\"container-fluid\">\n");
      out.write("        <a class=\"navbar-brand\" href=\"#\">TimZy</a>\n");
      out.write("        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n");
      out.write("            <span class=\"navbar-toggler-icon\"></span>\n");
      out.write("        </button>\n");
      out.write("        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n");
      out.write("            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n");
      out.write("                <li class=\"nav-item\">\n");
      out.write("                    <a class=\"nav-link\" href=\"#\">Home</a>\n");
      out.write("                </li>\n");
      out.write("                <li class=\"nav-item\">\n");
      out.write("                    <a class=\"nav-link\" href=\"#\">Products</a>\n");
      out.write("                </li>\n");
      out.write("                <li class=\"nav-item\">\n");
      out.write("                    <a class=\"nav-link\" href=\"#\">About Us</a>\n");
      out.write("                </li>\n");
      out.write("                <li class=\"nav-item\">\n");
      out.write("                    <a class=\"nav-link\" href=\"#\">User</a>\n");
      out.write("                </li>\n");
      out.write("                <li class=\"nav-item\">\n");
      out.write("                    <a class=\"nav-link\" href=\"#\">Add to Cart</a>\n");
      out.write("                </li>\n");
      out.write("            </ul>\n");
      out.write("            <!-- Search form -->\n");
      out.write("            <form class=\"d-flex\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/SearchServlet\" method=\"get\">\n");
      out.write("                <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" name=\"keyword\">\n");
      out.write("                <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\n");
      out.write("            </form>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</nav>\n");
      out.write("<!-- End Navbar -->\n");
      out.write("<div class=\"display-result\">\n");
      out.write("        <h1>Search Results</h1>\n");
      out.write("        ");
 
        List<ProductModel> searchResults = (List<ProductModel>) request.getAttribute("search_result");
        if (searchResults != null) {
            for (ProductModel product : searchResults) { 
      out.write("\n");
      out.write("                <div>\n");
      out.write("                    <h3>");
      out.print( product.getProduct_name() );
      out.write("</h3>\n");
      out.write("                    <p>Description: ");
      out.print( product.getProduct_description() );
      out.write("</p>\n");
      out.write("                    <p>Price: ");
      out.print( product.getPrice() );
      out.write("</p>\n");
      out.write("                </div>\n");
      out.write("            ");
 }
        } else { 
      out.write("\n");
      out.write("            <p>No results found.</p>\n");
      out.write("        ");
 }
        
      out.write("\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("<div class=\"container\">\n");
      out.write("    <div class=\"row\">\n");
      out.write("        <div class=\"col-md-3\">\n");
      out.write("            <div class=\"card mb-4\">\n");
      out.write("                <a href=\"#\" class=\"card-link\">\n");
      out.write("                    <div class=\"card-body\">\n");
      out.write("                        <div class=\"category-image\">\n");
      out.write("                            <img src=\"images/product_image.jpg\" alt=\"Product image\" class=\"img-fluid rounded\">\n");
      out.write("                        </div>\n");
      out.write("                        <h4 class=\"card-title\"><a>Product Name</a></h4>\n");
      out.write("                        <hr>\n");
      out.write("                        <div class=\"card-text\">\n");
      out.write("                        	<span class=\"description float-start\">Price:</span><br>\n");
      out.write("                            <span class=\"description float-start\">Product Description</span><br>\n");
      out.write("                            <span class=\"description float-start\">Connectivity:</span><br>\n");
      out.write("                            <span class=\"description float-start\">Brand Name:</span><br>\n");
      out.write("                            <span class=\"description float-start\">Operating System</span><br>\n");
      out.write("                            <span class=\"description float-start\">ScreenSize:</span>\n");
      out.write("                            <span class=\"description float-start\">Watch Color:</span><br>\n");
      out.write("                            <span class=\"description float-start\">Features:</span>\n");
      out.write("\n");
      out.write("                            </span>\n");
      out.write("                        \n");
      out.write("                            <div style=\"clear:both;\"></div>\n");
      out.write("                            <button class=\"btn btn-primary\">Add to Cart</button>\n");
      out.write("                            <button class=\"btn btn-success\">Buy Now</button>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </a>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("<div class=\"container\">\n");
      out.write("    <div class=\"row\">\n");
      out.write("        <div class=\"col-md-3\">\n");
      out.write("            <div class=\"card mb-4\">\n");
      out.write("                <a href=\"#\" class=\"card-link\">\n");
      out.write("                    <div class=\"card-body\">\n");
      out.write("                        <div class=\"category-image\">\n");
      out.write("                            <img src=\"images/product_image.jpg\" alt=\"Product image\" class=\"img-fluid rounded\">\n");
      out.write("                        </div>\n");
      out.write("                        <h4 class=\"card-title\"><a>Product Name</a></h4>\n");
      out.write("                        <hr>\n");
      out.write("                        <div class=\"card-text\">\n");
      out.write("                        	<span class=\"description float-start\">Price:</span><br>\n");
      out.write("                            <span class=\"description float-start\">Product Description</span><br>\n");
      out.write("                            <span class=\"description float-start\">Connectivity:</span><br>\n");
      out.write("                            <span class=\"description float-start\">Brand Name:</span><br>\n");
      out.write("                            <span class=\"description float-start\">Operating System</span><br>\n");
      out.write("                            <span class=\"description float-start\">ScreenSize:</span>\n");
      out.write("                            <span class=\"description float-start\">Watch Color:</span><br>\n");
      out.write("                            <span class=\"description float-start\">Features:</span>\n");
      out.write("                            </span>\n");
      out.write("                            <div style=\"clear:both;\"></div>\n");
      out.write("                            <button class=\"btn btn-primary\">Add to Cart</button>\n");
      out.write("                            <button class=\"btn btn-success\">Buy Now</button>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </a>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
